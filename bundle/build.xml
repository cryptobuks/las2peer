<project name="las2peer-bundle" default="main_jar" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<property environment="env"/>

	<property name="ivy.organisation" value="i5"/>
	<property name="ivy.revision" value="0.8"/>
	<property name="ivy.build.number" value="2"/>
	<property name="ivy.deliver.revision" value="${ivy.revision}"/>
	<property name="ivy.pom.version" value="${ivy.revision}"/>

	<condition property="ivy.las2peer.version" value="${ivy.revision}.${ivy.build.number}"
	           else="${ivy.revision}-SNAPSHOT">
		<isset property="env.LAS2PEER_RELEASE"/>
	</condition>

	<property name="ivy.install.version" value="2.4.0"/>
	<property name="ivy.jar.dir" value="${basedir}/../ivy"/>
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>
	<property name="ivy.settings.file" value="${ivy.jar.dir}/ivysettings.xml"/>
	<property name="ivy.dep.file" value="${basedir}/ivy.xml"/>
	<property name="ivy.pom_template.file" value="${ivy.jar.dir}/pom_template.xml"/>
	<property name="ant-contrib.jar.file" value="${ivy.jar.dir}/ant-contrib-1.0b3.jar"/>
	<tstamp>
		<format property="ivy.now" pattern="yyyy-MM-dd HH:mm:ss"/>
	</tstamp>

	<property name="tmp" location="tmp"/>

	<property name="export" location="export"/>
	<property name="export.jars" location="${export}/jars"/>
	<property name="export.doc" location="${export}/javadoc"/>

	<property name="lib.dir" value="lib"/>

	<property name="main-class" value="i5.las2peer.tools.L2pNodeLauncher"/>

	<!-- external libraries classpath, we don't need sources and javadoc -->
	<path id="classpath">
		<fileset dir="${lib.dir}/">
			<include name="**/*.jar"/>
			<exclude name="**/*sources.jar"/>
			<exclude name="**/*javadoc.jar"/>
		</fileset>
	</path>

	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${ant-contrib.jar.file}" onerror="failall"/>
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpath="${ant-contrib.jar.file}" onerror="failall"/>

	<!-- Download Dependencies (IVY) -->

	<target name="download-ivy" unless="skip.download">
		<echo message="installing ivy..."/>
		<get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
		     dest="${ivy.jar.file}" usetimestamp="true"/>
	</target>

	<target name="install-ivy" depends="download-ivy">
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar"/>
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
	</target>

	<target name="get_deps" depends="install-ivy" description="--> resolve dependencies">
		<ivy:retrieve type="jar, bundle" conf="*" pattern="${lib.dir}/[artifact]-[revision].[ext]"/>
	</target>

	<target name="deploy-local" depends="main_jar" description="--> deploy locally">

		<property name="sn" value="${ivy.deliver.revision}-SNAPSHOT"/>
		<local name="ivy.deliver.revision"/>
		<property name="ivy.deliver.revision" value="${sn}"/>
		<local name="ivy.pom.version"/>
		<property name="ivy.pom.version" value="${sn}"/>

		<ivy:makepom ivyfile="${ivy.dep.file}" templatefile="${ivy.pom_template.file}"
		             pomfile="${export.jars}/${ant.project.name}-${ivy.las2peer.version}.pom"
		             artifactName="${ant.project.name}" artifactPackaging="jar">
		</ivy:makepom>

		<ivy:publish resolver="local" publishivy="true" overwrite="true" forcedeliver="true" status="integration">
			<artifacts pattern="${export.jars}/${ant.project.name}-${ivy.las2peer.version}.[ext]"/>
		</ivy:publish>

	</target>

	<target name="deploy-snapshot" depends="main_jar" description="--> deploy snapshot">

		<property name="sn" value="${ivy.deliver.revision}-SNAPSHOT"/>
		<local name="ivy.deliver.revision"/>
		<property name="ivy.deliver.revision" value="${sn}"/>
		<local name="ivy.pom.version"/>
		<property name="ivy.pom.version" value="${sn}"/>

		<ivy:makepom ivyfile="${ivy.dep.file}" templatefile="${ivy.pom_template.file}"
		             pomfile="${export.jars}/${ant.project.name}-${ivy.las2peer.version}.pom"
		             artifactName="${ant.project.name}" artifactPackaging="jar" conf="platform">
			<mapping conf="platform" scope="compile"/>
		</ivy:makepom>

		<ivy:publish resolver="acis-snapshots" publishivy="false" overwrite="true" forcedeliver="true"
		             status="integration">
			<artifacts pattern="${export.jars}/${ant.project.name}-${ivy.las2peer.version}.[ext]"/>
		</ivy:publish>

	</target>

	<target name="deploy-release" depends="main_jar" description="--> deploy release">

		<property name="sn" value="${ivy.deliver.revision}.${ivy.build.number}"/>
		<local name="ivy.deliver.revision"/>
		<property name="ivy.deliver.revision" value="${sn}"/>
		<local name="ivy.pom.version"/>
		<property name="ivy.pom.version" value="${sn}"/>

		<ivy:makepom ivyfile="${ivy.dep.file}" pomfile="${export.jars}/${ant.project.name}-${ivy.las2peer.version}.pom"
		             artifactName="${ant.project.name}" artifactPackaging="jar" conf="platform">
			<mapping conf="platform" scope="compile"/>
		</ivy:makepom>

		<ivy:publish resolver="acis-internal" publishivy="false" overwrite="true" forcedeliver="true" status="release">
			<artifacts pattern="${export.jars}/${ant.project.name}-${ivy.las2peer.version}.[ext]"/>
		</ivy:publish>

	</target>


	<!-- Initialization -->

	<target name="init_general">
		<tstamp/>
		<mkdir dir="${tmp}"/>
		<mkdir dir="${export}"/>
	</target>

	<target name="init_jars" depends="init_general">
		<mkdir dir="${export.jars}"/>
	</target>


	<!-- Archives -->

	<target name="jars" depends="main_jar"/>

	<target name="main_jar" depends="get_deps">
		<!-- constructs the external libraries classpath name -->
		<jar jarfile="${export.jars}/${ant.project.name}-${ivy.las2peer.version}.jar">
			<!--zipgroupfileset dir="${lib.dir}" includes="**/*.jar" /-->
			<restrict>
				<archives>
					<zips>
						<fileset dir="${lib.dir}" includes="**/*.jar"/>
					</zips>
				</archives>
				<not>
					<name regex="META-INF\/(.*)\.(DSA|RSA|SF)"/>
					<!-- alternative: also exclude licenses with "META-INF\/((.*)\.(DSA|RSA|SF)|(LICENSE|NOTICE)(\.(txt|md|rst))?)" -->
				</not>
			</restrict>
			<manifest>
				<attribute name="Main-Class" value="${main-class}"/>
				<attribute name="Implementation-Title" value="${main-class}"/>
				<attribute name="Implementation-Version" value="${ivy.las2peer.version}"/>
				<attribute name="Implementation-Vendor" value="${ivy.organisation}"/>
				<attribute name="Build-Time" value="${ivy.now}"/>
			</manifest>
		</jar>
	</target>

	<!-- Cleanup -->

	<target name="clean" description="--> clean">
		<delete dir="${tmp}"/>
		<delete dir="${export}"/>
		<delete dir="${lib.dir}"/>
	</target>


	<target name="all" depends="clean, jars" description="--> all"/>

</project>
